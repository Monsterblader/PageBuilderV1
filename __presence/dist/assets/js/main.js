(function() {
  'use strict';

  angular.module('ramda', [])
    .service('R', ['$window', function($window) {
      return $window.R;
    }]);

}());

(function() {
  'use strict';

  angular.module('narvar', [

    // Core modules
    'ngSanitize',
    'ngRoute',
    'ngAnimate',
    'ngMessages',
    'ngResource',

    // Custom modules (app/modules/*)
    'ramda',

    // Template cache module generated by gulp
    'templates-app'

  ]).config(['$routeProvider', '$httpProvider', '$locationProvider',
    function($routeProvider, $httpProvider, $locationProvider) {
      $locationProvider.html5Mode(true);
      //$httpProvider.interceptors.push('FlashSvcInterceptor');

      $routeProvider.
        when('/', {
          templateUrl : '/views/pages/index',
          controller  : 'MainCtrl as mainCtrl'
        }).
        otherwise({
          redirectTo : '/'
        });

    }]);

}());

(function (angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.service.FlashSvc
   * @description
   * # FlashSvc
   * Service for flash messages
   */
  angular.module('narvar').service('FlashSvc', ['$rootScope', '$timeout',
    function ($rootScope, $timeout) {
      var svc = this;

      /**
       * Fetch any flash messages on the root scope.
       * @param key
       * @returns {*}
       */
      svc.getFlash = function (key) {
        var flash = $rootScope.flash;
        return (key) ? flash[key] : flash;
      };

      /**
       * Set the flash with new messages.
       * @param flash
       */
      svc.setFlash = function (flash) {
        var key;

        for (key in flash) {
          if (flash.hasOwnProperty(key) && Array.isArray(flash[key])) {
            $rootScope.flash[key] = flash[key].concat();
          }
        }

        // This lets us spam the flash message and have it toast every time.
        $timeout(svc.clearFlash);
      };

      /**
       * Resets the flash message object.
       * @returns {narvar.service.FlashSvc}
       */
      svc.clearFlash = function () {
        $rootScope.flash = {
          notice : [],
          error  : []
        };
        return svc;
      };

      return svc;
    }]).service('FlashSvcInterceptor', ['FlashSvc', function (FlashSvc) {
    return {
      'response' : function (res) {
        FlashSvc.setFlash(res.data.flash);
        return res;
      }
    };


  }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.factory.locationSvc
   * @description
   * # locationSvc
   * Original: https://github.com/angular/angular.js/issues/1699#issuecomment-22511464
   *
   * Usage:
   *
   * (interception is needed for Back/Forward buttons to work)
   *
   * location.intercept($scope._url_pattern, function(matched) {
   *   * can return false to abort interception
   *   var type = matched[1]
   *   if (!type) {
   *     return;
   *   }
   *   $scope.safeApply(function() {
   *     $scope.data_type = type;
   *     $scope.params.page = 1;
   *     $scope.get_data();
   *   });
   * });
   *
   * anywhere in your controller:
   * location.skipReload().path(url);
   *
   * to replace in history stack:
   * location.skipReload().path(url).replace();
   */
  angular.module('narvar').factory('LocationSvc', [
    '$location',
    '$route',
    '$rootScope',
    function($location, $route, $rootScope) {
      var pageRoute = $route.current;

      $location.skipReload = function() {
        var unbind = $rootScope.$on('$locationChangeSuccess', function() {
          $route.current = pageRoute;
          unbind();
        });
        return $location;
      };

      if ($location.intercept) {
        throw '$location.intercept is already defined';
      }

      $location.intercept = function(urlPattern, loadUrl) {

        var parsePath = function() {
          var match = $location.path().match(urlPattern);
          if (match) {
            match.shift();
            return match;
          }
        };

        var unbind = $rootScope.$on("$locationChangeSuccess", function() {
          var matched = parsePath();
          if (!matched || loadUrl(matched) === false) {
            return unbind();
          }
          $route.current = pageRoute;
        });
      };

      return $location;
    }
  ]);
}(angular));

(function (angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.service.TrackingSvc
   * @description
   * # TrackingSvc
   * Service to handle tracking API calls and data persistence
   */
  angular.module('narvar').service('TrackingSvc', ['$resource', '$cacheFactory', 'R',
    function ($resource, $cacheFactory, R) {
      var svc = this;

      /**
       * Internal cache to store API responses.
       * @type {{data: *, ttl: number, expires: Date}}
       */
      svc.cache = {
        data    : $cacheFactory('TrackingSvc'),
        ttl     : 3600,
        expires : new Date() // Expired on init so first resource call will seed cache
      };

      svc.resources = {

        /**
         * Grab the tracking information from the server.
         * @todo this is a placeholder, remove before delivery
         */
        tracking : $resource('/api/v0.0.0/tracking', null, {
          'get' : {

            /**
             * Request method.
             * @type {String}
             */
            method : 'GET',

            /**
             * Scrub the data before sending it back to the controller.
             * @param data
             * @returns {*}
             */
            transformResponse : function (data) {
              data = JSON.parse(data);
              svc.cache.data.put('tracking', data);
              return data;
            }
          }

        }) // End tracking
      };

      return svc;
    }]);
}(angular));

(function (angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.controller.MainCtrl
   * @description
   * # MainCtrl
   * Main controller for the home page
   */
  angular.module('narvar').controller('MainCtrl', ['TrackingSvc',
    function (TrackingSvc) {

      this.trackingSvc = TrackingSvc;

    }]);

}(angular));

(function (angular) {
  'use strict';

  /**
   * @ngdoc function
   * @name narvar.controller:RootCtrl
   * @description
   * # RootCtrl
   * Root controller to handle app level failures and promise rejections
   */
  angular.module('narvar').controller('RootCtrl', ['$rootScope', '$location', '$window', 'FlashSvc',
    function ($rootScope, $location, $window, FlashSvc) {

      $rootScope.$on('$routeChangeError', function (event, current, previous, rejection) {
        // @todo Graceful failover before launch.
        $window.alert(rejection);
      });

      FlashSvc.clearFlash();

      this.$location = $location;

    }]);

}(angular));

'use strict';

/**
 * @ngdoc function
 * @author seancannon
 * @name narvar.directive.modal
 * @description
 * # modal
 * Reusable modal container
 */
angular.module('narvar').directive('modal', ['$window', '$timeout',
  function ($window, $timeout) {

    return {
      restrict    : 'E',
      scope       : {},
      templateUrl : '/partials/modal',
      link        : function (scope, element, attrs) {

        /**
         * Show the modal by setting visibleWrapper and visibleContent to true.
         * The view has ng-if on those properties.
         * @param params
         * @private
         */
        function _showModal (e, params) {

          params = params || {};

          scope.templateUrl = params.templateUrl || '/partials/404';
          scope.visibleWrapper = true;
          $timeout(function () {
            scope.visibleContent = true;
          }, 700);

          if (typeof params.callback === 'function') {
            params.callback();
          }
        }

        /**
         * Show the modal by setting visibleWrapper and visibleContent to false.
         * The view has ng-if on those properties.
         * @param params
         * @private
         */
        function _hideModal (e, params) {
          params = params || {};

          scope.visibleWrapper = false;
          scope.visibleContent = false;

          if (typeof params.callback === 'function') {
            params.callback();
          }
        }

        /**
         * View be used with ng-include in the modal partial
         * @type {String}
         */
        scope.templateUrl = '/partials/404';

        scope.$on('narvar.showModal', _showModal);
        scope.$on('narvar.hideModal', _hideModal);

        element.bind('click', function (e) {
          if (e.target.className.match('modal-wrapper')) {
            _hideModal();
          }
        });

      } // End link()
    };

  }]);

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.siteHeader
   * @description
   * # siteHeader
   * Header with logo and nav
   */
  angular.module('narvar').directive('siteHeader', ['R',
    function(R) {
      return {
        restrict    : 'E',
        scope       : {},
        templateUrl : '/partials/site-header',
        link        : function(scope, element, attrs) {

        }
      };
    }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.footerWidget
   * @description
   * # footerWidget
   * Displays tracking information
   */
  angular.module('narvar').directive('footerWidget', ['R',
    function(R) {
      return {
        restrict    : 'E',
        scope       : {},
        templateUrl : 'widgets/footer/templates/footer-widget.html',
        link        : function(scope, element, attrs) {

        }
      }
    }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.faqWidget
   * @description
   * # faqWidget
   * Displays tracking information
   */
  angular.module('narvar').directive('faqWidget', ['R',
    function(R) {
      return {
        restrict : 'E',
        scope    : {
          type : '@'
        },
        templateUrl : 'widgets/faq/templates/faq-widget.html',
        link        : function(scope, element, attrs) {
          scope.tabs = [
            {
              title : "Frequently asked question 1?",
              body  : "Answer to frequently asked question 1. Bacon ipsum dolor amet boudin t-bone hamburger leberkas ham hock, turkey pig doner alcatra corned beef. Capicola tri-tip porchetta jerky ball tip shankle pancetta pork loin swine. Prosciutto beef ribs pig sirloin. Sirloin capicola andouille kielbasa tail. Picanha swine pastrami turkey turducken. Sirloin chicken filet mignon tongue jowl. Filet mignon beef ribs ham hock swine tenderloin bacon picanha venison flank drumstick pancetta salami cupim. Tongue andouille ham hock picanha kielbasa brisket pork chop bacon short ribs alcatra porchetta spare ribs ground round shankle. Capicola alcatra kielbasa spare ribs drumstick ribeye. Tri-tip hamburger cupim, jowl kielbasa flank andouille beef turducken pork loin. Tenderloin strip steak chicken, alcatra chuck tail jerky bresaola boudin pancetta. Kielbasa andouille t-bone, jowl turducken ball tip tongue ham kevin hamburger pig pork belly cow shankle. Porchetta turkey turducken, tail ribeye cow chuck jerky shoulder tri-tip."
            },
            {
              title : "Frequently asked question 2?",
              body  : "Answer to frequently asked question 2. Bacon ipsum dolor amet boudin t-bone hamburger leberkas ham hock, turkey pig doner alcatra corned beef. Capicola tri-tip porchetta jerky ball tip shankle pancetta pork loin swine. Prosciutto beef ribs pig sirloin. Sirloin capicola andouille kielbasa tail. Picanha swine pastrami turkey turducken. Sirloin chicken filet mignon tongue jowl. Filet mignon beef ribs ham hock swine tenderloin bacon picanha venison flank drumstick pancetta salami cupim. Tongue andouille ham hock picanha kielbasa brisket pork chop bacon short ribs alcatra porchetta spare ribs ground round shankle. Capicola alcatra kielbasa spare ribs drumstick ribeye. Tri-tip hamburger cupim, jowl kielbasa flank andouille beef turducken pork loin. Tenderloin strip steak chicken, alcatra chuck tail jerky bresaola boudin pancetta. Kielbasa andouille t-bone, jowl turducken ball tip tongue ham kevin hamburger pig pork belly cow shankle. Porchetta turkey turducken, tail ribeye cow chuck jerky shoulder tri-tip."
            },
            {
              title : "Frequently asked question 3?",
              body  : "Answer to frequently asked question 3. Bacon ipsum dolor amet boudin t-bone hamburger leberkas ham hock, turkey pig doner alcatra corned beef. Capicola tri-tip porchetta jerky ball tip shankle pancetta pork loin swine. Prosciutto beef ribs pig sirloin. Sirloin capicola andouille kielbasa tail. Picanha swine pastrami turkey turducken. Sirloin chicken filet mignon tongue jowl. Filet mignon beef ribs ham hock swine tenderloin bacon picanha venison flank drumstick pancetta salami cupim. Tongue andouille ham hock picanha kielbasa brisket pork chop bacon short ribs alcatra porchetta spare ribs ground round shankle. Capicola alcatra kielbasa spare ribs drumstick ribeye. Tri-tip hamburger cupim, jowl kielbasa flank andouille beef turducken pork loin. Tenderloin strip steak chicken, alcatra chuck tail jerky bresaola boudin pancetta. Kielbasa andouille t-bone, jowl turducken ball tip tongue ham kevin hamburger pig pork belly cow shankle. Porchetta turkey turducken, tail ribeye cow chuck jerky shoulder tri-tip."
            }
          ];
        }
      }
    }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.headerWidget
   * @description
   * # headerWidget
   * Displays tracking information
   */
  angular.module('narvar').directive('headerWidget', ['R',
    function(R) {
      return {
        restrict : 'E',
        scope    : {
          img   : '@',
          text  : '@',
          link  : '@',
          align : '@',
          fixed : '@'
        },
        templateUrl : 'widgets/header/templates/header-widget.html',
        link        : function(scope, element, attrs) {

        }
      }
    }]);
}(angular));

(function(angular) {
  'use strict';

  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.eddWidget
   * @description
   * # eddWidget
   * Displays estimated delivery date information.
   */
  angular.module('narvar').directive('eddWidget', ['R', 'TrackingSvc',
    function(R, TrackingSvc) {
      return {
        restrict : 'E',
        scope    : {
          whereIsMyPackageClickText : '@',
          whereIsMyPackageMessage   : '@',
          contactInfoClickText      : '@'
        },
        templateUrl : 'widgets/edd/templates/edd-widget.html',
        link        : function(scope, element, attrs) {

          TrackingSvc.resources.tracking.get(function(response) {
            var estimatedDelivery = R.path(['tracking', 'estimated_delivery'], response),
                deviceType        = R.prop('device_type', response);

            //scope.customerCareUrl = R.defaultTo('http://www.narvar.com', R.path(['customer_care', 'url']), response);

            scope.estimatedDeliveryRangeStartDay   = R.path(['range_start', 'day'], estimatedDelivery);
            scope.estimatedDeliveryRangeStartMonth = R.path(['range_start', 'month'], estimatedDelivery);
            scope.estimatedDeliveryRangeStartDate  = R.path(['range_start', 'date'], estimatedDelivery);
            scope.estimatedDeliveryRangeStartYear  = R.path(['range_start', 'year'], estimatedDelivery);

            scope.estimatedDeliveryRangeEndDay   = R.path(['range_end', 'day'], estimatedDelivery);
            scope.estimatedDeliveryRangeEndMonth = R.path(['range_end', 'month'], estimatedDelivery);
            scope.estimatedDeliveryRangeEndDate  = R.path(['range_end', 'date'], estimatedDelivery);
            scope.estimatedDeliveryRangeEndYear  = R.path(['range_end', 'year'], estimatedDelivery);

            scope.estimatedDeliveryRangeStartMonthName = months[scope.estimatedDeliveryRangeStartMonth];
            scope.estimatedDeliveryRangeEndMonthName   = months[scope.estimatedDeliveryRangeEndMonth];

            scope.deliveryStatusMessage = R.path(['tracking', 'delivery', 'status_message'], response);

            scope.isSingleDate = R.equals(scope.estimatedDeliveryRangeStartDate, scope.estimatedDeliveryRangeEndDate);
            scope.isDelivered  = R.equals('DELIVERED', scope.deliveryStatusMessage);
            scope.isMobile     = R.equals('MOBILE',    deviceType);
            scope.isTablet     = R.equals('TABLET',    deviceType);

            scope.dataAdvIdPackage = scope.isMobile ? 'package_info_mobile' : 'package_info';
            scope.dataAdvIdContact = scope.isMobile ? 'contact_info_mobile' : 'contact_info';

            scope.handleBannerAdLinkClick = function() {
              console.log(scope.dataAdvIdPackage);
            };

            (function calculateDaysRemaining() {
              var context = scope.isSingleDate ? 'Start' : 'End';

              scope.daysRemaining = Math.ceil(
                (new Date(
                  R.prop('estimatedDeliveryRange' + context + 'Year', scope),
                  R.prop('estimatedDeliveryRange' + context + 'Month', scope),
                  R.prop('estimatedDeliveryRange' + context + 'Date', scope)
                ).getTime() - new Date().getTime()) / 1000 / 60 / 60 / 24
              );

              scope.daysRemainingText = R.cond([
                [R.equals(0), 'Today'],
                [R.equals(1), '1 more day'],
                [R.T,         scope.daysRemaining + ' more days']
              ], scope.daysRemaining);
            }());

          }); // End TrackingSvc.get()

        } // End link()

      }; // End return;

    }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.feedbackComment
   * @description
   * # feedbackComment
   * General feedback comment
   */
  angular.module('narvar').directive('feedbackComment', ['R',
    function(R) {
      return {
        restrict : 'E',
        require  : '^surveyWidget',
        scope    : {
          caption         : '@',
          placeholderText : '@'
        },
        templateUrl : 'widgets/survey/templates/feedback-comment.html',
        link        : function(scope, element, attrs, surveyWidgetCtrl) {

          /**
           * Record the value from the customer.
           * @param {Number} value
           */
          scope.record = function(value) {
            surveyWidgetCtrl.record('Comment', value);
          };

          scope.buttonHoverState = false;
          scope.buttonClass      = scope.buttonHoverState ? 'btn-primary' : 'btn-primary-outline';
        }
      }
    }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.feedbackComplete
   * @description
   * # feedbackComplete
   * General feedback complete
   */
  angular.module('narvar').directive('feedbackComplete', ['R',
    function(R) {
      return {
        restrict : 'E',
        require  : '^surveyWidget',
        scope    : {
          caption    : '@',
          subtext    : '@',
          buttonText : '@',
          buttonHref : '@'
        },
        templateUrl : 'widgets/survey/templates/feedback-complete.html',
        link        : function(scope, element, attrs, surveyWidgetCtrl) {
          scope.buttonHoverState = false;
          scope.buttonClass      = scope.buttonHoverState ? 'btn-primary' : 'btn-primary-outline';
        }
      }
    }]);
}(angular));

(function(angular) {

  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.feedbackStars
   * @description
   * # feedbackStars
   * Overall rating for the delivery.
   */
  angular.module('narvar').directive('feedbackStars', ['R',
    function(R) {

      var title = 'How was your delivery?';

      return {
        restrict : 'E',
        require  : '^surveyWidget',
        scope    : {
          caption    : '@',
          adjectives : '='
        },
        templateUrl : 'widgets/survey/templates/feedback-stars.html',
        link        : function(scope, element, attrs, surveyWidgetCtrl) {

          /**
           * Set the caption to one of the hovered stars adjective strings.
           * @param {Number} index
           */
          scope.setCaptionFromAdjectivesIndex = function(index) {
            scope.caption = scope.adjectives[index];
          };

          /**
           * Reset the caption to the default title.
           */
          scope.resetCaption = function() {
            scope.caption = title;
          };

          /**
           * Record the value from the customer.
           * @param {Number} value
           */
          scope.record = function(value) {
            surveyWidgetCtrl.record('Stars rating', value);
          };

          scope.hoverIndex = -1;
          scope.title      = scope.caption;
        }
      }
    }]);
}(angular));

(function(angular) {

  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.feedbackTiming
   * @description
   * # feedbackTiming
   * Feedback for delivery promptness.
   */
  angular.module('narvar').directive('feedbackTiming', ['R',
    function(R) {
      return {
        restrict : 'E',
        require  : '^surveyWidget',
        scope    : {
          caption    : '@',
          adjectives : '='
        },
        templateUrl : 'widgets/survey/templates/feedback-timing.html',
        link        : function(scope, element, attrs, surveyWidgetCtrl) {

          /**
           * Set the hover state of the button.
           * @param {Boolean} state
           */
          scope.setButtonHoverState = function(state) {
            scope.buttonHoverState = state;
          };

          /**
           * Record the value from the customer.
           * @param {Number} value
           */
          scope.record = function(value) {
            surveyWidgetCtrl.record('Timing rating', value);
          };

          scope.buttonHoverState = false;
          scope.buttonClass      = scope.buttonHoverState ? 'btn-primary' : 'btn-primary-outline';

        }
      }
    }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.surveyWidget
   * @description
   * # surveyWidget
   * Displays tracking information
   */
  angular.module('narvar').directive('surveyWidget', ['R',
    function(R) {
      return {
        restrict    : 'E',
        scope       : {
          steps : '@'
        },
        controller  : function() {
          this.currentStep = 1;

          this.nextStep = function() {
            this.currentStep += 1;
            return this;
          };

          this.record = function(type, value) {
            // TODO remove console log statement and POST
            console.log(type + ': ' + value);
            return this.nextStep();
          };
        },
        controllerAs : 'surveyWidgetCtrl',
        templateUrl  : 'widgets/survey/templates/survey-widget.html',
        link         : function(scope, element, attrs) {}
      }
    }]);
}(angular));

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.smsWidget
   * @description
   * # smsWidget
   * Displays tracking information
   */
  angular.module('narvar').directive('smsWidget', ['R', '$location',
    function(R, $location) {
      return {
        restrict    : 'E',
        scope       : {
          retailerName      : '@',
          carrierName       : '@',
          errorMessage      : '@',
          successMessage    : '@',
          messageDelay      : '@',
          locale            : '@',
          showSuccessButton : '&',
          successCallback   : '&',
          enableCheckbox    : '&',
          template          : '@'
        },
        templateUrl : 'widgets/sms/templates/sms-widget.html',
        link        : function(scope, element, attrs) {

          var queryString = $location.search();

          scope.messageDelay      = parseInt(R.defaultTo(1000, R.prop('messageDelay', scope)), 10);
          scope.locale            = R.defaultTo('us',     R.prop('locale',            scope));
          scope.showSuccessButton = R.defaultTo(false,    R.prop('showSuccessButton', scope));
          scope.successCallback   = R.defaultTo(false,    R.prop('successCallback',   scope));
          scope.enableCheckbox    = R.defaultTo(false,    R.prop('enableCheckbox',    scope));
          scope.template          = R.defaultTo('widget', R.prop('template',          scope));

          (function() {
            //Show check box if enabled
            smsInput.on('click', function(e){
              e.stopPropagation();
              if (enableCheckbox == true){
                $('#sms-widget-checkbox').slideDown("fast");
              };
            });

            //Change opt in or out on check
            $(document).on('click', '.sms-input-check', function(e){
              e.stopPropagation();
              if (thirdParty == false){
                thirdParty = true;
              } else {
                thirdParty = false;
              }
              hideCheckboxDelayed();
            });
            //Hide opt-in
            $(document).click(function(e) {
              if ( $(e.target).closest(smsInput).length === 0 ) {
                hideCheckbox();
              }
            });
            function hideCheckbox(){
              if ($(smsInput).val().length == 0) {
                setTimeout(function(){
                  $('#sms-widget-checkbox').slideUp("fast");
                }, 500);
              }
            };
            function hideCheckboxDelayed(){
              if ($(smsInput).val().length == 0) {
                setTimeout(function(){
                  $('#sms-widget-checkbox').slideUp("fast");
                }, 5500);
              }
            };
          })

        }
      }
    }]);
}(angular));




(function() {

  /*
   Narvar SMS Signup Widget v1.0
   Dependencies:
   jQuery 1.11.2
   https://code.jquery.com/jquery-1.11.2.min.js
   International Telephone Input v3.0.3
   https://github.com/Bluefieldscom/intl-tel-input.git
   */

  //Wrap the plugin in the $ jQuery alias and adds scope
  (function ( $ ) {
    $.fn.smsWidget = function(options) {

      // Extend default options
      var opts = $.extend({

        smsButton: "#sms-signup",

        template: "widget"
      }, options);


      //Variables
      var smsInput = $(this);//$('#sms-input');
      var msgContainer = $(opts.messageContainer);
      var msgDelay = opts.messageDelay;
      var retailerName = opts.retailerName;
      var carrierName = opts.carrierName;
      var successMsg = opts.successMessage;
      var errorMsg = opts.errorMessage;
      var defaultLocale = opts.defaultLocale.toLowerCase();
      var smsBtn = opts.smsButton;
      var successButton = opts.showSuccessButton;
      var enableCheckbox = opts.enableCheckbox;
      var smsSuccess = opts.successCallback;
      var template = opts.template;
      var pathArray = window.location.pathname.split('/');
      var hostURL = window.location.origin;
      var smsProcess = false;
      var trackingNumbers = $.urlParam('tracking_numbers');
      var	retailerBrand = $.urlParam('brand');
      var	orderNumber = $.urlParam('order_number');
      var thirdParty = true;
      var countryISO = $.urlParam('locale');
      var smsPackage = {};

      //------------------------------------------------------------------------
      //				SMS WIDGET
      //------------------------------------------------------------------------


      //Set Locale
      if (countryISO && countryISO.length > 3){
        countryISO = countryISO.toLowerCase().split(/[^A-Za-z]/)[1].substring(0,2);
      } else {
        countryISO = defaultLocale;
      }
      if (!(countryISO == 'us' || countryISO == 'ca')){
        smsInput.intlTelInput({
          preferredCountries :  [countryISO]
        });
      }

      //Hide message container
      msgContainer.hide();



      //North America telphone formatting: (555) 555-5555
      smsInput.on("keyup paste", function() {

        if (countryISO === 'us' || countryISO === 'ca'){
          // Remove invalid chars from the input
          var input = this.value.replace(/[^0-9\(\)\s\-]/g, "");
          var inputlen = input.length;
          // Get just the numbers in the input
          var numbers = this.value.replace(/\D/g,'');
          var numberslen = numbers.length;
          // Value to store the masked input
          var newval = "";

          //Remove 0 and 1 from begginning - disabled
          //if ( numbers > 3 && numbers[0] === '1' || numbers[0] === '0') numbers = numbers.substring(1);

          // Loop through the existing numbers and apply the mask
          for(var i=0;i<numberslen;i++){
            if(i==0) newval="("+numbers[i];
            else if(i==3) newval+=") "+numbers[i];
            else if(i==6) newval+="-"+numbers[i];
            else newval+=numbers[i];
          }

          // Re-add the non-digit characters to the end of the input that the user entered and that match the mask.
          if( inputlen >=1&&numberslen==0&&input[0]=="(") newval="(";
          else if(inputlen>=6&&numberslen==3&&input[4]==")"&&input[5]==" ") newval+=") ";
          else if(inputlen>=5&&numberslen==3&&input[4]==")") newval+=")";
          else if(inputlen>=6&&numberslen==3&&input[5]==" ") newval+=" ";
          else if(inputlen>=10&&numberslen==6&&input[9]=="-") newval+="-";

          $(this).val(newval.substring(0,14));
        }
      });

      function smsActions (){
        if (template === "footer"){
          $('#sms-widget-checkbox').slideUp("fast");
        }
      };

      function errorMessage(msg){
        $('.sms-body-text').hide();
        msgContainer.removeClass('sms-success').addClass('sms-error').html(errorMsg).fadeIn(msgDelay).fadeOut(msgDelay, function(){
          $('.sms-body-text').fadeIn(msgDelay);
          smsProcess = false;
          return false;
        });
      };

      function successMessage(msg){
        $('.sms-body-text').hide();
        if(successButton == true){
          msgContainer.removeClass('sms-error').addClass('sms-success').html(successMsg).fadeIn(msgDelay, function(){
            $('.sms-widget-form').fadeOut('fast', function(){
              $('.sms-widget-success').fadeIn(msgDelay);
              $('.modal').modal('hide');
            });
          });
        } else {
          msgContainer.removeClass('sms-error').addClass('sms-success').html(successMsg).fadeIn(msgDelay);
          $('#sms-widget-checkbox').fadeOut("fast");
          $('.modal').modal('hide');
        }
        smsProcess = false;
        return false;
      };

      //Post to API
      function smsPost(data) {
        smsProcess = true;
        smsActions();
        smsPackage.tracking_numbers = trackingNumbers;
        smsPackage.carrier = carrierName;
        smsPackage.phone = smsInput.val();
        smsPackage.brand = retailerBrand;
        smsPackage.order_number = orderNumber;
        smsPackage.third_party_signup = thirdParty;
        smsPackage.referer = window.location.href;
        smsJSON = JSON.stringify(smsPackage);

        var phoneLen = smsPackage.phone.length;

        if (phoneLen < 9 && (!(countryISO === 'us' || countryISO === 'ca'))){
          errorMessage();
          return false;
        }
        if (phoneLen < 14 && (countryISO === 'us' || countryISO === 'ca')){
          errorMessage();
          return false;
        }

        else {

          $.ajax({
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            },
            type: 'POST',
            url: postURL,
            crossDomain: true,
            data: smsJSON,
            dataType: 'JSON',
            success: function (data) {
              if (data.status === 'success') {
                //Great success
                successMessage();
                smsProcess = false;
                if(smsSuccess){ smsSuccess();}
                return false;
              } else {
                //Api error response
                errorMsg = data.status;
                errorMessage();
                smsProcess = false;
                return false;
              }
            },
            error: function (data) {
              //No error message
              smsProcess = false;
              return false;
            }
          });
        }
      };
      /* Events */
      $(document).on('click', smsBtn, function () {
        if(!smsProcess){smsPost();}
        return false;
      });

      smsInput.keyup(function(e){
        var code = e.which; // use e.which, normalized across browsers

        if(code==13){
          e.preventDefault();
          if(!smsProcess){smsPost();}
          return false;
        }
      });
      //------------------------------------------------------------------------
      //				END SMS WIDGET
      //------------------------------------------------------------------------
    };
  }( jQuery ));

})

(function(angular) {
  'use strict';

  /**
   * @ngdoc function
   * @author seancannon
   * @name narvar.directive.trackingStatusWidget
   * @description
   * # trackingStatusWidget
   * Displays tracking information
   */
  angular.module('narvar').directive('trackingStatusWidget', ['R', 'TrackingSvc',
    function(R, TrackingSvc) {

      console.log('R = ', window.R);
      return {
        restrict    : 'E',
        scope       : {},
        templateUrl : 'widgets/trackingStatus/templates/tracking-status-widget.html',
        link        : function(scope, element, attrs) {
          scope.status = 'Fetching status...';
          scope.img    = '/assets/images/processing.svg';

          TrackingSvc.resources.tracking.get(function(response) {
            var status = R.path(['tracking', 'status'], response);
            scope.status = status;
            scope.img    = '/assets/images/' + R.toLower(status) + '.svg';
          });
        }
      }
    }]);
}(angular));
